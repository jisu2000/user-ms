package com.hit.userms.controller;import com.hit.userms.dto.AddressDTO;import com.hit.userms.service.AddressService;import com.hit.userms.utils.OtpHelper;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.http.HttpStatus;import org.springframework.http.ResponseEntity;import org.springframework.scheduling.annotation.Scheduled;import org.springframework.web.bind.annotation.*;import java.util.List;@RestController@RequestMapping("/api/v1/address")public class AddressController {    @Autowired    private AddressService addressService;    @PostMapping("/add")    public ResponseEntity<?> addAddress(            @RequestHeader("Authorization") String header,            @RequestBody AddressDTO addressDTO    ){        String token=header.substring(7);        AddressDTO response=this.addressService.addAddress(token,addressDTO);        return new ResponseEntity<>(response, HttpStatus.CREATED);    }    @GetMapping("/get-all")    public ResponseEntity<?> getAllAddressOfUser(            @RequestHeader("Authorization") String header    ){        String token=header.substring(7);        List<AddressDTO> addressDTOS=this.addressService.getAllAddressOfaUser(token);        return new ResponseEntity<>(addressDTOS,HttpStatus.OK);    }    @PutMapping("/update")    public ResponseEntity<?> updateAddress(            @RequestHeader("Authorization") String header,            @RequestBody AddressDTO addressDTO,            @RequestParam("id") Integer id    ){        String token = header.substring(7);        AddressDTO response=this.addressService.updateAddress(token,id,addressDTO);        return new ResponseEntity<>(response,HttpStatus.OK);    }    @DeleteMapping("/delete")    public ResponseEntity<?> deleteAddress(            @RequestHeader("Authorization") String header,            @RequestParam("id") Integer id    ){        String token = header.substring(7);        String response=this.addressService.deleteAddress(token,id);        return new ResponseEntity<>(response,HttpStatus.OK);    }}