package com.hit.userms.exception;import com.hit.userms.response.ErrorResponse;import org.springframework.http.HttpStatus;import org.springframework.http.ResponseEntity;import org.springframework.security.authentication.BadCredentialsException;import org.springframework.web.bind.annotation.ExceptionHandler;import org.springframework.web.bind.annotation.RestControllerAdvice;import org.springframework.web.server.ResponseStatusException;@RestControllerAdvicepublic class GlobalExceptionHandler {    @ExceptionHandler(BadCredentialsException.class)    public ResponseEntity<?> handleBadCredentialException(BadCredentialsException ex){        ErrorResponse errorResponse=ErrorResponse.builder()                .msg(ex.getMessage())                .status(HttpStatus.UNAUTHORIZED)                .build();        return new ResponseEntity<>(errorResponse,HttpStatus.UNAUTHORIZED);    }    @ExceptionHandler(Exception.class)    public ResponseEntity<?> handle(Exception ex){        ErrorResponse errorResponse=ErrorResponse.builder()                .msg(ex.getMessage())                .status(HttpStatus.BAD_REQUEST)                .build();        return new ResponseEntity<>(errorResponse,HttpStatus.BAD_REQUEST);    }    @ExceptionHandler(ResponseStatusException.class)    public ResponseEntity<?> handleRe(ResponseStatusException ex){        ErrorResponse errorResponse=ErrorResponse.builder()                .msg(ex.getMessage())                .status(HttpStatus.BAD_REQUEST)                .build();        return new ResponseEntity<>(errorResponse,HttpStatus.UNAUTHORIZED);    }}